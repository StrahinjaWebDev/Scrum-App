// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider     = "prisma-client-js"
  relationMode = "prisma"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index(userId)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index(userId)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Workspace     Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId   String?

  @@unique([workspaceId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Workspace {
  id     String  @id @default(cuid())
  boards Board[]
  users  User[]
  name   String
}

model Board {
  id          String     @id @default(cuid())
  name        String
  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId String?
  Column      Column[]

  @@unique([id])
  @@index([workspaceId])
}

model Column {
  id      String  @id @default(cuid())
  name    String
  board   Board   @relation(fields: [boardId], references: [id])
  boardId String
  Issue   Issue[]

  @@unique([id])
  @@index([boardId])
}

model Issue {
  id          String   @id @default(cuid())
  name        String
  description String
  column      Column   @relation(fields: [columnId], references: [id])
  columnId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([id])
  @@index([columnId])
}
